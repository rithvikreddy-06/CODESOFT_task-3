<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>iPhone Style Calculator</title>
  <style>
    body {
      margin: 0;
      min-height: 100vh;
      background: #fff;
      display: flex;
      justify-content: center;
      align-items: center;
      font-family: 'San Francisco', Arial, sans-serif;
    }
    .calculator {
      width: 360px;
      padding: 40px 20px;
      border-radius: 28px;
      background: linear-gradient(135deg, #330000 0%, #000000 100%);
      box-shadow: 0 8px 32px rgba(51,0,0,0.7);
    }
    .display {
      width: 100%;
      height: 80px;
      background: #222;
      color: #fff;
      text-align: right;
      padding: 18px 20px;
      border-radius: 12px;
      font-size: 2.7em;
      letter-spacing: 2px;
      margin-bottom: 18px;
      box-sizing: border-box;
      overflow-x: auto;
    }
    .button-row {
      display: flex;
      justify-content: space-between;
      margin-bottom: 16px;
    }
    button {
      width: 66px;
      height: 66px;
      border-radius: 50%;
      border: none;
      font-size: 1.5em;
      color: #fff;
      background: #505050;
      cursor: pointer;
      margin: 0 2px;
      outline: none;
      transition: filter 0.2s;
    }
    button:active {
      filter: brightness(1.2);
    }
    .operation {
      background: #ff9500;
      color: #fff;
    }
    .clear {
      background: #a5a5a5;
      color: #000;
    }
    .dark-button {
      background: #505050;
      color: #fff;
    }
    .large {
      width: 146px;
      border-radius: 34px;
      text-align: left;
      padding-left: 28px;
    }
    @media (max-width: 400px) {
      .calculator { width: 98vw; padding: 12px 2px; }
      button, .large { width: 21vw; height: 21vw; min-width: 48px; min-height: 48px; font-size: 1.1em; }
      .large { width: 46vw; }
    }
  </style>
</head>
<body>
  <div class="calculator">
    <div class="display" id="display">0</div>
    <div class="button-row">
      <button class="clear" onclick="clearDisplay()">AC</button>
      <button class="dark-button" onclick="inputValue('+/-')">±</button>
      <button class="dark-button" onclick="inputValue('%')">%</button>
      <button class="operation" onclick="inputValue('/')">÷</button>
    </div>
    <div class="button-row">
      <button onclick="inputValue('7')">7</button>
      <button onclick="inputValue('8')">8</button>
      <button onclick="inputValue('9')">9</button>
      <button class="operation" onclick="inputValue('*')">×</button>
    </div>
    <div class="button-row">
      <button onclick="inputValue('4')">4</button>
      <button onclick="inputValue('5')">5</button>
      <button onclick="inputValue('6')">6</button>
      <button class="operation" onclick="inputValue('-')">−</button>
    </div>
    <div class="button-row">
      <button onclick="inputValue('1')">1</button>
      <button onclick="inputValue('2')">2</button>
      <button onclick="inputValue('3')">3</button>
      <button class="operation" onclick="inputValue('+')">+</button>
    </div>
    <div class="button-row">
      <button class="large" onclick="inputValue('0')">0</button>
      <button onclick="inputValue('.')">.</button>
      <button class="operation" onclick="calculate()">=</button>
    </div>
  </div>
  <script>
    let display = document.getElementById('display');
    let current = '0';
    let operator = '';
    let operand = null;
    let resetNext = false;

    function inputValue(val) {
      if (val === '+/-') {
        if (current !== '0') current = (parseFloat(current) * -1).toString();
      } else if (val === '%') {
        current = (parseFloat(current) / 100).toString();
      } else if (['+', '-', '*', '/'].includes(val)) {
        if (operator && !resetNext) calculate();
        operator = val;
        operand = parseFloat(current);
        resetNext = true;
      } else {
        if (current === '0' || resetNext) {
          current = (val === '.') ? '0.' : val;
          resetNext = false;
        } else {
          if (!(val === '.' && current.includes('.'))) {
            current += val;
          }
        }
      }
      updateDisplay();
    }

    function clearDisplay() {
      current = '0';
      operator = '';
      operand = null;
      resetNext = false;
      updateDisplay();
    }

    function calculate() {
      if (!operator || operand === null) return;
      let result;
      switch (operator) {
        case '+': result = operand + parseFloat(current); break;
        case '-': result = operand - parseFloat(current); break;
        case '*': result = operand * parseFloat(current); break;
        case '/': 
          if (parseFloat(current) === 0) {
            result = 'Error';
          } else {
            result = operand / parseFloat(current);
          }
          break;
        default: result = parseFloat(current);
      }
      current = result.toString();
      operator = '';
      operand = null;
      resetNext = true;
      updateDisplay();
    }

    function updateDisplay() {
      display.textContent = current.length > 12 ? parseFloat(current).toExponential(4) : current;
    }
  </script>
</body>
</html>
